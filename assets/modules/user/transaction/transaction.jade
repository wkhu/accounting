md-toolbar.site-content-toolbar.md-whiteframe-2dp
	.md-toolbar-tools.docs-toolbar-tools
		md-button.md-icon-button(ng-click="toggleSidenav('left')" hide-gt-sm aria-label="Toggle Menu")
			md-icon(md-font-icon="icon-bars")
		div.fill-height(flex)
			h2.md-headline  Transaction
md-content.md-inline-form.content-background(layout="column" layout-padding flex)
	p This is where you manage transaction(create, update, delete, view) 
	b *Note: Update your Item price when necessary before adding transactions.
	//- md-subheader.md-primary
	//- 	div(layout="row") 
	//- 		h2(flex='5')
	//- 		h2(flex) Date
	//- 		h2(flex) Category
	//- 		h2(flex) Item
	//- 		h2(flex='10') Quantity
	//- 		h2(flex='10') Price
	//- 		h2(flex) Total
	//- md-list(layout-padding)
	//- 	md-list-item(ng-repeat='expense in expenses.data')
	//- 		p(flex='5') {{$index + 1}}
	//- 		p(flex) {{expense.date | date:'MMM d'}}
	//- 		p(flex) {{expense.category.name}}
	//- 		p(flex) {{expense.item}}
	//- 		p(flex='10') {{expense.quantity}}
	//- 		p(flex='10') {{expense.price}}
	//- 		p(flex) {{expense.isBorrowed? '':expense.total}}
	//- 		p(flex) {{expense.isBorrowed? expense.total:''}}
	//- div(layout="row")
	//- 	md-button.md-raised.md-whiteframe-2dp(aria-label="Input" ng-click="showInput($event)") Input
	//- 	md-button.md-raised.md-whiteframe-2dp(aria-label="Output" ng-click="showOutput($event)") Output

	md-card
		form(name="transactionForm" ng-submit="add()")
			div(layout="row")
				//- p(flex="5")
				div(layout="column")
					md-datepicker(name="date" ng-model="transaction.date" md-placeholder="Enter date" required)
					.validation-messages(ng-messages="transactionForm.date.$error" ng-show="transactionForm.date.$touched && transactionForm.date.$invalid")
						div(ng-message="valid") The entered value is not a date!
						div(ng-message="required") This date is required!
				md-input-container
					label Item
					md-select(ng-model='transaction.item' name="item" required)
						md-option(ng-repeat="item in items | orderBy:'itemName'" value='{{item.id}}')
							| {{item.itemName}}
					div(ng-messages="transactionForm.item.$error")
						div(ng-message="required") Item is required.
				md-input-container(flex=10)
					label Unit
					input(ng-model="transaction.unit" disabled) 
				//- md-input-container(flex=10)
				//- 	label Price
				//- 	input(ng-model="transaction.price" disabled) 
				//- md-input-container
				//- 	label Unit
				//- 	md-select(ng-model='transaction.unit' name="unit" required)
				//- 		md-option(ng-repeat="unit in units | orderBy:'unitName'" value='{{unit.unitName}}')
				//- 			| {{unit.unitName}}
				//- 	div(ng-messages="transactionForm.unit.$error")
				//- 		div(ng-message="required") Unit is required.
				md-input-container(flex='10')
					label Price
					input(type='number' step='any' ng-model="transaction.price" name="price" required)
					div(ng-messages="transactionForm.price.$error")
						div(ng-message="required") Price is required.
				md-input-container
					label Type
					md-select(ng-model='transaction.type' name="type" required)
						md-option(ng-value='true') 
							| Input
						md-option(ng-value='false') 
							| Output
					div(ng-messages="transactionForm.type.$error")
						div(ng-message="required") Type is required.
				md-input-container(flex='10')
					label Quantity
					input(type='number' step='any' ng-model="transaction.quantity" name="quantity" required)
					div(ng-messages="transactionForm.quantity.$error")
						div(ng-message="required") Quantity is required.
				span
					md-button.md-raised.md-primary(type="submit" ng-disabled="transactionForm.$invalid") Add


	//- md-card
	//- 	md-toolbar.md-table-toolbar.md-default
	//- 		.md-toolbar-tools
	//- 			span transaction
	//- 	// exact table from live demo
	//- 	md-table-container
	//- 		table(md-table)
	//- 			thead(md-head md-order="query.order" md-on-reorder="onReorder")
	//- 				tr(md-row)
	//- 					th(md-column md-order-by="date") Date
	//- 					th(md-column md-order-by="category") Category
	//- 					th(md-column md-order-by="item") Item
	//- 					th(md-column md-numeric md-order-by="quantity") Quantity
	//- 					th(md-column md-numeric md-order-by="price") Price
	//- 					th(md-column md-numeric md-order-by="total") Total


	//- 			tbody(md-body)
	//- 				tr(md-row ng-repeat='transaction in transaction.data')
	//- 					td(md-cell) {{transaction.date  | date:'MMM d'}}
	//- 					td(md-cell) {{transaction.category.name}}
	//- 					td(md-cell) {{transaction.item}}
	//- 					td(md-cell) {{transaction.quantity}}
	//- 					td(md-cell) {{transaction.price}}
	//- 					td(md-cell) {{transaction.total}}
	//- 			tfoot(md-foot)
	//- 				tr(md-row)
	//- 					td(md-cell colspan="5")
	//- 					td(md-cell) 
	//- 						strong Total: {{sum}}

	//- 	md-table-pagination(md-limit='query.limit' md-page='query.page' md-total='{{transaction.count}}' md-on-paginate='onPaginate' md-page-select)


	md-card
		//- md-toolbar.md-table-toolbar.md-default(ng-hide='options.rowSelection && selected.length')
		//- 	.md-toolbar-tools
		//- 		span Inventory
		//- 		div(flex)
		//- 		md-button(ng-click='loadStuff()') Async Operation
		md-toolbar.md-table-toolbar.alternate(ng-show='options.rowSelection && selected.length')
			.md-toolbar-tools
				span {{selected.length}} {{selected.length > 1 ? 'items' : 'item'}} selected
		md-table-container
			table(md-table md-row-select='options.rowSelection' ng-model='selected' md-progress='promise')
				thead(md-head md-order='query.order' md-on-reorder='onReorder')
					tr(md-row)
						//- th(md-column) No.
						th(md-column md-order-by='date')
							span Date
						th(md-column md-order-by='item')
							span Item
						th(md-column md-order-by='unit')
							span Unit
						th(md-column md-numeric='true' md-order-by='price')
							span Price
						th(md-column md-order-by='type')
							span Type
						th(md-column md-numeric='true' md-order-by='quantity')
							span Quantity
						//- th(md-column md-numeric='true' md-order-by='value')
						//- 	span Value
						//- th(md-column md-numeric='true' md-order-by='stockBalance')
						//- 	span Stock Balance
						//- th(md-column md-numeric='true' md-order-by='stockValue')
						//- 	span Stock Value
						th(md-column style="text-align: center;") 
							span Actions
				tbody(md-body)
					tr(md-row ng-show="transactions.data.length == 0") 
						td(md-cell colspan="8" style="text-align: center;") No records found.
					tr(md-row md-select='transaction' md-on-select='logItem' md-auto-select='options.autoSelect' ng-repeat='transaction in transactions.data')
						//- td(md-cell) {{$index + 1}})
						td(md-cell) {{transaction.date  | date:'MMM d'}}
						td(md-cell) 
							md-select(ng-model='transaction.item.id' placeholder='Item')
								md-option(ng-repeat="item in items | orderBy:'itemName'" ng-value='item.id')
									| {{item.itemName}}
						td(md-cell) 
							md-select(ng-model='transaction.item.unit' placeholder='Unit')
								md-option(ng-repeat="unit in units | orderBy:'unitName'" ng-value='unit.id')
									| {{unit.unitName}}
						td(md-cell) {{transaction.price}}
						td(md-cell) 
							md-select(ng-model='transaction.type' placeholder='Type')
								md-option(ng-value='true')
									| Input
								md-option(ng-value='false')
									| Output
						td(md-cell) {{transaction.quantity}}
						//- td(md-cell) {{transaction.price * transaction.quantity}}
						td(md-cell style="text-align: center;")
							md-button.md-icon-button
								md-icon(ng-click='editTransaction($event, transaction)', aria-label='Edit', md-font-icon='icon-pencil-square-o')
							md-button.md-icon-button
								md-icon(ng-click='doSecondaryAction($event)', aria-label='Delete', md-font-icon='icon-trash')
				//- tfoot(md-foot)
				//- 	tr(md-row)
				//- 		td(md-cell colspan="7" style="text-align:right;")
				//- 			strong Total: {{sum}}
				//- 		td(md-cell colspan="2")
		md-table-pagination(md-limit='query.limit' md-options='limits' md-page='query.page' md-total='{{transactions.count}}' md-page-select='options.pageSelector' md-boundary-links='options.boundaryLinks' md-on-paginate='onPaginate')
